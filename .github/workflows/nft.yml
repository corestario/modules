name: NFT
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v1
      id: go
      with:
        go-version: 1.13
    - name: Setup env for GO
    #  this is only used until the setup-go action is updated
      run: |
        echo "::set-env name=GOPATH::$(go env GOPATH)"
        echo "::add-path::$(go env GOPATH)/bin"
        echo "::set-env name=GO111MODULE::"on""
      shell: bash
    - name: install runsim
      run: |
        go get github.com/cosmos/tools/cmd/runsim@v1.0.0
    - uses: actions/cache@v1
      with:
        path: ~/go/bin
        key: ${{ runner.os }}-go-runsim-binary
  unit-test: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v1
      id: go
      with:
        go-version: 1.13
    - name: Setup env for GO
    #  this is only used until the setup-go action is updated
      run: |
        echo "::set-env name=GOPATH::$(go env GOPATH)"
        echo "::add-path::$(go env GOPATH)/bin"
      shell: bash
    - uses: actions/checkout@v2
    - name: Unit_test
      run: cd incubator/nft && make test
  # test-sim-nondeterminism:
  #   runs-on: ubuntu-latest
  #   needs: Build
  #   steps:
  #   - uses: actions/setup-go@v1
  #     id: go
  #     with:
  #       go-version: 1.13
  #   - name: Setup env for GO
  #     #  this is only used until the setup-go action is updated
  #     run: |
  #       echo "::set-env name=GOPATH::$(go env GOPATH)"
  #       echo "::add-path::$(go env GOPATH)/bin"
  #     shell: bash
  #   - uses: actions/checkout@v2
  #   - uses: actions/cache@v1
  #     with:
  #       path: ~/go/bin
  #       key: ${{ runner.os }}-go-runsim-binary
  #   - name: test nondeterminism
  #     run: |
  #       cd incubator/nft && make test-sim-nondeterminism
  # test-sim-import-export:
  #   runs-on: ubuntu-latest
  #   needs: Build
  #   steps:
  #   - uses: actions/setup-go@v1
  #     id: go
  #     with:
  #       go-version: 1.13
  #   - name: Setup env for GO
  #     #  this is only used until the setup-go action is updated
  #     run: |
  #       echo "::set-env name=GOPATH::$(go env GOPATH)"
  #       echo "::add-path::$(go env GOPATH)/bin"
  #     shell: bash
  #   - uses: actions/checkout@v2
  #   - uses: actions/cache@v1
  #     with:
  #       path: ~/go/bin
  #       key: ${{ runner.os }}-go-runsim-binary
  #   - name: test import export
  #     run: |
  #       cd incubator/nft && make test-sim-import-export
  # test-sim-after-import:
  #   runs-on: ubuntu-latest
  #   needs: Build
  #   steps:
  #   - uses: actions/setup-go@v1
  #     id: go
  #     with:
  #       go-version: 1.13
  #   - name: Setup env for GO
  #     #  this is only used until the setup-go action is updated
  #     run: |
  #       echo "::set-env name=GOPATH::$(go env GOPATH)"
  #       echo "::add-path::$(go env GOPATH)/bin"
  #     shell: bash
  #   - uses: actions/checkout@v2
  #   - uses: actions/cache@v1
  #     with:
  #       path: ~/go/bin
  #       key: ${{ runner.os }}-go-runsim-binary
  #   - name: test after import
  #     run: |
  #       cd incubator/nft && make test-sim-after-import
  # test-sim-multi-seed-short:
  #   runs-on: ubuntu-latest
  #   needs: Build
  #   steps:
  #   - uses: actions/setup-go@v1
  #     id: go
  #     with:
  #       go-version: 1.13
  #   - name: Setup env for GO
  #     #  this is only used until the setup-go action is updated
  #     run: |
  #       echo "::set-env name=GOPATH::$(go env GOPATH)"
  #       echo "::add-path::$(go env GOPATH)/bin"
  #     shell: bash
  #   - uses: actions/checkout@v2
  #   - uses: actions/cache@v1
  #     with:
  #       path: ~/go/bin
  #       key: ${{ runner.os }}-go-runsim-binary
  #   - name: test after import
  #     run: |
  #       cd incubator/nft && make test-sim-multi-seed-short
